#!/usr/bin/env python3
"""
Test script to verify mediapipe_env has required packages
"""

import sys
import os

def test_imports():
    """Test critical imports for StorySign"""
    print("üß™ Testing MediaPipe Environment Dependencies")
    print("=" * 50)
    
    try:
        import numpy as np
        print(f"‚úÖ NumPy {np.__version__}")
    except ImportError as e:
        print(f"‚ùå NumPy: {e}")
        return False
    
    try:
        import cv2
        print(f"‚úÖ OpenCV {cv2.__version__}")
    except ImportError as e:
        print(f"‚ùå OpenCV: {e}")
        return False
    
    try:
        import mediapipe as mp
        print(f"‚úÖ MediaPipe {mp.__version__}")
    except ImportError as e:
        print(f"‚ùå MediaPipe: {e}")
        return False
    
    try:
        import fastapi
        print(f"‚úÖ FastAPI {fastapi.__version__}")
    except ImportError as e:
        print(f"‚ùå FastAPI: {e}")
        return False
    
    try:
        import uvicorn
        print(f"‚úÖ Uvicorn {uvicorn.__version__}")
    except ImportError as e:
        print(f"‚ùå Uvicorn: {e}")
        return False
    
    try:
        import websockets
        print(f"‚úÖ WebSockets {websockets.__version__}")
    except ImportError as e:
        print(f"‚ùå WebSockets: {e}")
        return False
    
    try:
        import pydantic
        print(f"‚úÖ Pydantic {pydantic.__version__}")
    except ImportError as e:
        print(f"‚ùå Pydantic: {e}")
        return False
    
    # Test MediaPipe functionality
    try:
        mp_holistic = mp.solutions.holistic
        mp_drawing = mp.solutions.drawing_utils
        print("‚úÖ MediaPipe Holistic and Drawing Utils")
    except Exception as e:
        print(f"‚ùå MediaPipe functionality: {e}")
        return False
    
    # Test backend imports
    try:
        sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))
        from config import get_config
        print("‚úÖ Backend config module")
        
        from video_processor import FrameProcessor
        print("‚úÖ Backend video processor module")
        
    except Exception as e:
        print(f"‚ùå Backend modules: {e}")
        return False
    
    print("\nüéâ All dependencies are available!")
    print("‚úÖ MediaPipe environment is ready for StorySign")
    return True

if __name__ == "__main__":
    success = test_imports()
    sys.exit(0 if success else 1)