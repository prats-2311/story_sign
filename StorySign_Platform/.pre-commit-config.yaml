# Pre-commit hooks configuration for StorySign Platform
# See https://pre-commit.com for more information

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: ["--unsafe"]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Python hooks
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3.11
        files: ^backend/
        args: ["--config", "backend/pyproject.toml"]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        files: ^backend/
        args: ["--settings-path", "backend/pyproject.toml"]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        files: ^backend/
        args: ["--config", "backend/setup.cfg"]
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.1
    hooks:
      - id: mypy
        files: ^backend/
        args: ["--config-file", "backend/pyproject.toml"]
        additional_dependencies:
          - types-requests
          - types-python-dateutil
          - pydantic

  # JavaScript/TypeScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.52.0
    hooks:
      - id: eslint
        files: ^frontend/src/.*\.(js|jsx|ts|tsx)$
        args: ["--config", "frontend/.eslintrc.js", "--fix"]
        additional_dependencies:
          - eslint@^8.52.0
          - eslint-plugin-react@^7.33.0
          - eslint-plugin-react-hooks@^4.6.0
          - eslint-plugin-jsx-a11y@^6.7.0
          - eslint-plugin-import@^2.29.0
          - eslint-plugin-testing-library@^6.1.0

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$
        args: ["--config", "frontend/.prettierrc.js"]

  # Security hooks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: package.lock.json

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^backend/
        args: ["-r", "backend/", "-f", "json", "-o", "bandit-report.json"]
        exclude: ^backend/tests/

  # Documentation hooks
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        args: ["--wrap", "80"]
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black

  # Commit message hooks
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.12.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Local hooks for custom checks
  - repo: local
    hooks:
      # Python test hook
      - id: pytest
        name: pytest
        entry: bash -c 'cd backend && python -m pytest tests/ --maxfail=1 -q'
        language: system
        files: ^backend/
        pass_filenames: false
        stages: [push]

      # Frontend test hook
      - id: frontend-tests
        name: frontend tests
        entry: bash -c 'cd frontend && npm test -- --watchAll=false --coverage=false'
        language: system
        files: ^frontend/src/
        pass_filenames: false
        stages: [push]

      # Accessibility test hook
      - id: accessibility-tests
        name: accessibility tests
        entry: bash -c 'cd frontend && npm run test:a11y'
        language: system
        files: ^frontend/src/
        pass_filenames: false
        stages: [push]

      # Check for TODO/FIXME comments in production code
      - id: check-todos
        name: check for TODO/FIXME
        entry: bash -c 'if grep -r "TODO\|FIXME" --include="*.py" --include="*.js" --include="*.jsx" backend/ frontend/src/ --exclude-dir=tests --exclude-dir=test; then echo "TODO/FIXME found in production code"; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [commit]

      # Check for console.log in production code
      - id: check-console-log
        name: check for console.log
        entry: bash -c 'if grep -r "console\.log" --include="*.js" --include="*.jsx" frontend/src/ --exclude-dir=tests --exclude-dir=test; then echo "console.log found in production code"; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [commit]

      # Check for debugger statements
      - id: check-debugger
        name: check for debugger statements
        entry: bash -c 'if grep -r "debugger" --include="*.js" --include="*.jsx" frontend/src/ --exclude-dir=tests --exclude-dir=test; then echo "debugger statement found in production code"; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [commit]

      # Validate package.json
      - id: validate-package-json
        name: validate package.json
        entry: bash -c 'cd frontend && npm run validate-package'
        language: system
        files: ^frontend/package\.json$
        pass_filenames: false

      # Check for large files
      - id: check-large-files-custom
        name: check for large files
        entry: bash -c 'find . -type f -size +500k -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./build/*" -not -path "./dist/*" | head -10'
        language: system
        pass_filenames: false

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
